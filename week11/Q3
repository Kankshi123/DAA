#include <iostream>
#include <vector>
using namespace std;
bool canPartition(vector<int>& nums) {
    int total_sum = 0;
    for(int num : nums) {
        total_sum += num;
    }
    if(total_sum % 2 != 0) {
        return false;
    }
    int target = total_sum / 2;
    int n = nums.size();
    vector<bool> dp(target + 1, false);
    dp[0] = true;  
    for(int num : nums) {
        for(int j = target; j >= num; j--) {
            dp[j] = dp[j] || dp[j - num];
        }
    }
    return dp[target];
}
int main() {
    int n;
    cin >> n;
    vector<int> nums(n);
    for(int i = 0; i < n; i++) {
        cin >> nums[i];
    }
    if(canPartition(nums)) {
        cout << "yes" << endl;
    } else {
        cout << "no" << endl;
    }
    return 0;
}
